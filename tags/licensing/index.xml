<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>licensing on Roy Tang</title>
      <link>https://mirror.roytang.net/tags/licensing/</link>
      <description>Recent content in licensing on Roy Tang</description>
      <generator>Hugo -- gohugo.io</generator>
      <language>en-us</language>
      <managingEditor>hello@roytang.net (Roy Tang)</managingEditor>
      <webMaster>hello@roytang.net (Roy Tang)</webMaster>
      <lastBuildDate>Mon, 16 Nov 2009 08:34:23 +0000</lastBuildDate>
      
          <atom:link href="https://mirror.roytang.net/tags/licensing/index.xml" rel="self" type="application/rss+xml" />
      
          
      
        <item>
            <title>New note
</title>
            <link>https://mirror.roytang.net/2009/11/1740843/</link>
            <pubDate>Mon, 16 Nov 2009 08:34:23 +0000</pubDate>
            <author>hello@roytang.net (Roy Tang)</author>
            <guid>https://mirror.roytang.net/2009/11/1740843/</guid>
            <description>
            

            &lt;p&gt;We have a small .Net program that we sell with individual licenses. The individual licenses are enforced by registering a key file that is generated using information from the machine used to install the program (MAC address, etc.)&lt;/p&gt;
&lt;p&gt;Now, we have a customer request for a site-wide license, such that they can deploy to as many machines on their site as possible. From the technical POV I&amp;rsquo;m not sure what are the usual approaches for this; our old approach won&amp;rsquo;t work since we can&amp;rsquo;t map the license to any machine-specific information.&lt;/p&gt;
&lt;p&gt;Any suggestions?&lt;/p&gt;
&lt;p&gt;A few more details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the program is a client-side program that includes an Office Add-In&lt;/li&gt;
&lt;li&gt;the machines to be installed on may or may not have internet access&lt;/li&gt;
&lt;li&gt;we aren&amp;rsquo;t restricted to .Net-only approaches, I&amp;rsquo;m just looking for a general idea of how this sort of thing is usually handled&lt;/li&gt;
&lt;/ul&gt;



            </description>
        </item>
    
    </channel>
  </rss>