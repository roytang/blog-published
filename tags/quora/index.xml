<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>quora on Roy Tang</title>
      <link>https://roytang.net/tags/quora/</link>
      <description>Recent content in quora on Roy Tang</description>
      <generator>Hugo -- gohugo.io</generator>
      <language>en-us</language>
      <managingEditor>hello@roytang.net (Roy Tang)</managingEditor>
      <webMaster>hello@roytang.net (Roy Tang)</webMaster>
      <lastBuildDate>Mon, 08 Apr 2019 05:56:56 +0000</lastBuildDate>
      
          <atom:link href="https://roytang.net/tags/quora/index.xml" rel="self" type="application/rss+xml" />
      
          
      
        <item>
            <title>How can I find my interests in life?
</title>
            <link>https://roytang.net/2019/04/how-can-i-find-my-interests-in-life/</link>
            <pubDate>Mon, 08 Apr 2019 05:56:56 +0000</pubDate>
            <author>hello@roytang.net (Roy Tang)</author>
            <guid>https://roytang.net/2019/04/how-can-i-find-my-interests-in-life/</guid>
            <description>
            
            &lt;p&gt;Another repost from my &lt;a href=&#34;https://roytang.net/2018/12/quora/&#34;&gt;Quora&lt;/a&gt; answers. Back in 2016 when I was on a work hiatus, I answered a lot of &amp;ldquo;how to live&amp;rdquo; questions on Quora, this is one of them.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How can I find my interests in life?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Look everywhere. Try everything.&lt;/p&gt;
&lt;p&gt;Life is varied and has a wider scope than you could possibly imagine. Step outside your comfort zone. Visit new places. Sign up for strange classes. Go down roads you don&amp;rsquo;t normally follow. Walk into new stores you&amp;rsquo;ve never visited. Eat at new restaurants with cuisine you&amp;rsquo;ve never tried before.&lt;/p&gt;
&lt;p&gt;Talk to new people. Ask them about that cool thing they just did. Ask them what they do for a living. Ask them what interesting thing happened to them last week. Ask them how they met their SO. Ask them who was the coolest person they knew. Try to meet that person too.&lt;/p&gt;
&lt;p&gt;Learn new skills. Develop new hobbies. Watch new tv shows. Read more books.&lt;/p&gt;
&lt;p&gt;Live, live, live.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.quora.com/How-can-I-find-my-interests-in-life/answer/Roy-Tang&#34;&gt;Link to the original answer on Quora.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Edit: Supplemental follow-up: The above advice doesn&amp;rsquo;t mean living a life of constant adventure (we can&amp;rsquo;t all be Scrooge McDuck). Heaven knows I&amp;rsquo;m not super adventurous myself so I can&amp;rsquo;t really give that advice. But I think we should always be consciously pushing our boundaries and stepping outside our comfort zones, to see what lies beyond. We don&amp;rsquo;t have to explore every corner of the world, but we can expand our own small corners of it, as much as we can.&lt;/p&gt;



            </description>
        </item>
    
        <item>
            <title>How much of what we learn in school helps us in real life?
</title>
            <link>https://roytang.net/2019/03/how-much-of-what-we-learn-in-school-helps-us-in-real-life/</link>
            <pubDate>Tue, 19 Mar 2019 05:56:56 +0000</pubDate>
            <author>hello@roytang.net (Roy Tang)</author>
            <guid>https://roytang.net/2019/03/how-much-of-what-we-learn-in-school-helps-us-in-real-life/</guid>
            <description>
            
            &lt;p&gt;Another repost from my Quora answers, this time some info for anyone looking to move into programming.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How much of what we learn in school helps us in real life?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The stuff school teaches you - literature, mathematics, art, history, science, and so on - are intended to give you a broad enough base from which you can freely choose the direction you want to go in life. This means that as you specialize, many of these subjects may become “irrelevant&amp;rdquo; to you, but having this broad base of knowledge gives you a better foundation in life. Knowledge from unrelated fields can often give useful insight to your own specialized field.&lt;/p&gt;
&lt;p&gt;That being said, the most useful stuff you learn from school isn’t the stuff that’s in the lectures or in the textbooks. The most important things you learn from school are in the methods of learning and working well with others. School teaches how to apply yourself, how to study and pick up new material, how to listen to other people, how to determine which knowledge is useful to learn, how to discern truth from fiction, how to work within a set of rules, how to manage your time, how to deal with schedules and deadlines, how to work well with other people, how to deal with difficult people, and so on. In short, the most important lesson school teaches you is how to deal with the real world.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.quora.com/How-much-of-what-we-learn-in-school-helps-us-in-real-life/answer/Roy-Tang&#34;&gt;Link to the original answer on Quora&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Edit: Not directly related, but reposting the above made me think of &lt;a href=&#34;https://tumblr.roytang.net/post/83513200339/poetry&#34;&gt;this quote from Dead Poets Society&lt;/a&gt;.&lt;/p&gt;



            </description>
        </item>
    
        <item>
            <title>What are the pros and cons of a programming career?
</title>
            <link>https://roytang.net/2019/03/what-are-the-pros-and-cons-of-a-programming-career/</link>
            <pubDate>Tue, 12 Mar 2019 05:56:56 +0000</pubDate>
            <author>hello@roytang.net (Roy Tang)</author>
            <guid>https://roytang.net/2019/03/what-are-the-pros-and-cons-of-a-programming-career/</guid>
            <description>
            
            &lt;p&gt;Another repost from my Quora answers, this time some info for anyone looking to move into programming.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What are the pros and cons of making your career in programming?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Pros:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It is a very rewarding career financially. Software development often ranks in the top 10 highest-earning careers in most countries&lt;/li&gt;
&lt;li&gt;There is a lot of scope - you could be developing web applications, mobile applications, embedded applications, client-side, server-side, data analysis, artificial intelligence, games, etc&lt;/li&gt;
&lt;li&gt;It is very difficult to be bored. You can always automate away the boring stuff. Different projects always present different challenges. The field is evolving rapidly so there are always new things to learn.&lt;/li&gt;
&lt;li&gt;It is both a creative endeavor and a technical endeavor&lt;/li&gt;
&lt;li&gt;Lots of opportunities for remote work/working from home, if that is your thing&lt;/li&gt;
&lt;li&gt;You get to work with a lot of smart people&lt;/li&gt;
&lt;li&gt;Access to a worldwide community of people who think in a similar manner. Most beginner and intermediate problems easily solved through the internet&lt;/li&gt;
&lt;li&gt;Generally, working in a programming company is more likely to be a meritocracy - people with better technical skill are more likely to be valued&lt;/li&gt;
&lt;li&gt;There are a lot of opportunities - if you are unhappy where you are, you can easily look for another opportunity&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It is not for everybody. It requires a certain type of thinking that you may or may not be used to. Typically the field needs the ability to think logically and incrementally (step-by-step through how things happen) and to understand how multiple components work and interact together. More advanced challenges will also require significant out of the box thinking&lt;/li&gt;
&lt;li&gt;After some time, you will tend to interpret things more literally. This is a side effect of working with computer programs that may affect your social interactions&lt;/li&gt;
&lt;li&gt;Many people outside of the field will often find it difficult to understand the amount of work that goes into a computer program. This can lead to difficult conversations, especially with clients&lt;/li&gt;
&lt;li&gt;Your nonprogrammer friends and relatives will often ask you for technical help, even though you know nothing about their printer and will most likely just google the information&lt;/li&gt;
&lt;li&gt;Typically, the industry is very bad at estimation and scheduling, leading to a lot of overtime and the corresponding stress&lt;/li&gt;
&lt;li&gt;The field is evolving rapidly, so there is often a need for a career programmer to self-educate to remain up-to-date with current trends&lt;/li&gt;
&lt;li&gt;Encountering a highly difficult problem that no one else has been able to solve may drive you insane&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://www.quora.com/What-are-the-pros-and-cons-of-making-your-career-in-programming/answer/Roy-Tang&#34;&gt;Link to the original answer on Quora&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(Annoyingly I just realized that the permalink to a Quora answer may change if the text of the answer changes, since they use the question slug instead of an id in the url.)&lt;/p&gt;



            </description>
        </item>
    
        <item>
            <title>Studying a large project codebase
</title>
            <link>https://roytang.net/2019/03/studying-a-large-project-codebase/</link>
            <pubDate>Sun, 03 Mar 2019 05:56:56 +0000</pubDate>
            <author>hello@roytang.net (Roy Tang)</author>
            <guid>https://roytang.net/2019/03/studying-a-large-project-codebase/</guid>
            <description>
            
            &lt;p&gt;Given my &lt;a href=&#34;https://roytang.net/2018/12/quora/&#34;&gt;recent misgivings about Quora&lt;/a&gt;, I thought it might be a good idea to cross-post some of my answers from there into this blog, with some edits even. So here&amp;rsquo;s the first one! (stuff in &lt;em&gt;italics&lt;/em&gt; were added during the cross-post)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How can you read and study a large software project source code?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Attacking a large, existing codebase that you are unfamiliar with can be a daunting endeavor. Don&amp;rsquo;t expect that you will be able to easily navigate the codebase quickly after just a few days of studying it. Familiarity will come with experience.&lt;/p&gt;
&lt;p&gt;Some things that can help:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t try to understand everything all at once. Figure out what is interesting to you and focus your efforts there&lt;/li&gt;
&lt;li&gt;Follow the path of data. Easiest way to see how the program works. For example, if I were studying a web application that processes request parameters to generate a search result, I would trace how the program captures the parameters from the requests object, formulates it into a search query, sends it to the database, receives the results, formats the results, then sends it back to the browser. Looking at the typical paths through which data traverses the system can give you a good overview of where everything is. &lt;em&gt;this may be a problem if you&amp;rsquo;re not familiar with the technology or framework the codebase is using, as some of the details may have too many layers of abstraction to trace. In that case, better to brush up and have a basic understanding of the tech first.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Try to fix a bug or implement some sort of change. If it&amp;rsquo;s an open source project, this is probably the best way to familiarize yourself with the codebase &lt;em&gt;and&lt;/em&gt; get more involved at the same time. I&amp;rsquo;d suggest starting with minor UI bugs, those tend to be easiest to figure out since a text search of the source will often point you to where the correction needs to be made. For example, if the bug is that a particular error message is being shown under the wrong conditions, you can use a text search to find where the error message is declared, then trace all the code points that generate that message, figure out which one you need to update (probably by trial and error) and fix accordingly&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://www.quora.com/How-can-you-read-and-study-a-large-software-project-source-code/answer/Roy-Tang&#34;&gt;Link to the original answer on Quora&lt;/a&gt;&lt;/p&gt;



            </description>
        </item>
    
        <item>
            <title>Dealing with Failure
</title>
            <link>https://roytang.net/2016/07/dealing-with-failure/</link>
            <pubDate>Tue, 12 Jul 2016 01:30:04 +0000</pubDate>
            <author>hello@roytang.net (Roy Tang)</author>
            <guid>https://roytang.net/2016/07/dealing-with-failure/</guid>
            <description>
            
            &lt;p&gt;&lt;img class=&#34;alignnone&#34; src=&#34;http://www.thequotepedia.com/images/02/success-is-not-final-failure-is-not-fatal-it-is-the-courage-to-continue-that-counts-by-winston-churchill.png&#34; alt=&#34;&amp;quot;Success is not final, failure is not fatal: it is the courage to continue that counts&amp;quot; - Winston Churchill&#34; width=&#34;601&#34; height=&#34;447&#34; /&gt;&lt;/p&gt;
&lt;p&gt;During my the first semester of my second year in University, I failed four out of five classes I was taking due to slacking off a lot. Those same classes were only available during the first semester of each year, which meant I could not retake them during the second semester or over the summer to catch up. So effectively, I had fallen one year behind everyone I knew.&lt;/p&gt;
&lt;p&gt;When I got the news, it was devastating. Up until that time I had always been a pretty good student and I felt like I had always made my parents proud and happy. I did not know how I would tell them about it, I felt that I had failed them utterly. I knew I only had myself to blame as I had let most of these classes go by without paying much attention to them. Sometimes when you’re used to doing well academically all the time you might get lax and feel complacent and then you’re surprised to find out there’s a lot you haven’t picked up but it’s too late to catch up.&lt;/p&gt;
&lt;p&gt;My parents were very understanding. My friends did not make fun of me or anything like that. I decided to take the failure for what it was &amp;ndash; a failure &amp;ndash; and simply learn from my mistakes and move on. I had to toughen up. I accepted that I would not be graduating on time, and that it was my own fault. I spent a semester under academic probation, but from that point onwards I did not fail any other classes, and I successfully graduated some years later, got a good job and so on.&lt;/p&gt;
&lt;p&gt;Failure is a setback yes, but it’s a setback you can learn from and that you can recover from. Failure is not fatal (most of the time &amp;ndash; obviously try not to fail at skydiving). As long as you can find a way to move forward there is no reason you would not be able to surpass it. In time you will look back on your failures as struggles that you learned from and made you stronger and more resilient&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post was originally written &lt;a href=&#34;https://www.quora.com/How-do-I-deal-with-the-fact-that-I-failed-my-year/answer/Roy-Tang&#34;&gt;as a Quora response&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;



            </description>
        </item>
    
    </channel>
  </rss>